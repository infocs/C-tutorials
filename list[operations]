#include<stdio.h>
#include<stdlib.h>


typedef struct node
{
  int data;
  struct node* next;
}node;



void push(node **head,int data)
{
    
    struct node* temp1 = (node*)malloc(sizeof(node));
    temp1->data = data;
    temp1->next = *head;
    *head = temp1;
}

int pop(node **head)
{
	if(head == NULL)
	{
		return -1;
	}
	else
	{
		int data = (*head)->data;

		struct node* tmp = *head;
		*head = tmp->next;
		free(tmp);
		return data;
	}
}


void inv(node  *p,node **head)
{
	if(p->next == NULL)
	{
		*head = p;
		return;
	}
 	inv(p->next,head);
	struct node* q = (node*)malloc(sizeof(node));
	q = p->next;
	q->next = p;
	p->next = NULL;
}

// function to copy linked list in another one 
struct node* cpyList(node *head)
{
	struct node* current = head;
	struct node* newlist = NULL;
	struct node* tail  =NULL;
    
    while(current !=NULL)
    {
    	if(newlist ==NULL)
    	{
    		newlist = (node*)malloc(sizeof(node));
    		newlist->data = current->data;
    		newlist->next = NULL;
    		tail = newlist;
    	}
    	else
    	{

            tail->next = (node*)malloc(sizeof(node));
            tail = tail->next;
            tail->data = current->data;
            tail->next = NULL;

    	}
    	current = current->next;
    }
    return(newlist);
}

struct node* cpyListRec(node* head)
{
	if(head ==NULL)
	{
		return NULL;
	}
	else
	{
	   struct node* newlist = (node*)malloc(sizeof(node));
	   newlist->data = head->data;
	   newlist->next = cpyListRec(head->next);
	   return newlist;   
	}

}



main()
{
	struct node* head = NULL;
	push(&head,1);
	push(&head,2);
	push(&head,3);

	struct node* p = head;
	
    
    struct node* head2 = cpyListRec(head);
    inv(p,&head);

	struct node* tmp = head;
	while (tmp !=NULL)
	{
		printf(" \n data = %i \n",tmp->data);
		tmp = tmp->next;
	}
}
